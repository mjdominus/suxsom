
Methods that may be provided by plugins:

new(ctx)
  return a plugin object

build(ctx, product)
  Modify or otherwise handle a product, possibly generating new products.
  Might write out the product's output files, if it is finished.
  Or might transform the product or annotate it in some way.
  Returns (status code, [ new products ] )  

  The status code should be "success" if it is successful,
  an error message otherwise.

  The list of new products may be missing or empty and is added to
  the list of products to be handled by later phases of computation.

build_all(ctx, products)
   Just like build, except that it is called once, and given all the
   current products at once, instead of called one at a time for each
   current product

generate(ctx, input_nodes)
  Return a list of products that describe output files that should be generated

finished(ctx)
  Run just before the program shuts down


You may be tempted
to have 'build' produce output objects
which are later written to output files,
but this is a bad idea.
You should not be munging HTML.
Instead of embedding a %%TOC HERE%% code in the output
which is later substituted with a TOC,
there should be a TOC plugin
that builds the toc
and puts it into the context.
The HTML builder can then get the toc
from the context
and insert it into the output
at the time the file is written.

But how are you going to make something like BOOKLINK work then?  
And how are you going to handle markdown processing?
There should be a markdown processor
which gets control before the standard HTML processor.

Idea: output plugins, 
such as html/rss/atom,
will look for an output_text element
in the input object.
If it's missing, they die.
The loader plugin will initialize it
with the original file text.
The macro processor can modify it;
the markdown processor will replace it with HTML.
Input items will have a MIME type
which can be modified as necessary.

Idea: add a debug flag to Suxsom
which describe which plugins
are actually called
during each phase of processing.


